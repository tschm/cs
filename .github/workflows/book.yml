# Workflow for building and deploying the Jupyter Book documentation
# This workflow is triggered on push events and performs the following tasks:
# 1. Builds Marimo notebooks and exports them to HTML
# 2. Builds Jupyter notebooks into a book
# 3. Combines all artifacts and deploys them to GitHub Pages

name: deploy-book

# Trigger the workflow on push events
# This ensures the documentation is automatically updated whenever code changes are pushed
on:
  push:
    branches:
      - main


# This workflow contains multiple jobs that run in parallel and sequentially
jobs:
  # Job to build Marimo interactive notebooks and export them to HTML
  # This converts Python files in the book/marimo directory to interactive web pages
  marimo:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - name: Checkout [${{ github.repository }}]
        uses: actions/checkout@v4

      - name: Install the latest version of uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13

      # Convert all Marimo notebooks to HTML-WASM format
      # The WASM format allows for interactive elements to work in the browser
      - name: Convert notebooks to HTML-WASM
        run: |
          # uv run pip install --no-cache-dir marimo
          mkdir -p artifacts/marimo

          # Find all Python files in the notebooks directory and export them to HTML-WASM
          for notebook in *.py; do
            # Extract the filename without extension
            filename=$(basename "$notebook" .py)
            echo "Exporting $notebook to HTML-WASM..."

            # Create output directory for this notebook
            mkdir -p artifacts/marimo/$filename

            # Export in edit mode to allow users to modify the notebook
            uvx marimo export html-wasm --sandbox $notebook -o artifacts/marimo/$filename/index.html --mode edit
          done

          # List all exported notebooks
          echo "Exported notebooks:"
          ls -la artifacts/marimo/
          tree artifacts/marimo
        working-directory: book/marimo

      # Upload the generated HTML-WASM files as a GitHub Actions artifact
      # This makes the files available for the deployment job
      - name: Upload HTML artifacts
        uses: actions/upload-artifact@v4
        with:
          name: marimo
          path: artifacts/marimo
          if-no-files-found: 'error'
          retention-days: 1  # Keep artifacts for 1 day to save storage

  # Job to build the Jupyter Book documentation
  # This converts Jupyter notebooks to a static website with navigation
  jupyter:
    runs-on: "ubuntu-latest"
    steps:
      # Check out the repository code
      - name: Checkout [${{ github.repository }}]
        uses: actions/checkout@v4

      # Build the Jupyter Book using a reusable action
      # This action handles the book building process including configuration
      - uses: tschm/cradle/actions/jupyter@v0.1.72

  # Job to combine all artifacts and prepare them for deployment
  # This job runs after both jupyter and marimo jobs have completed
  build:
    permissions:
      pages: write            # Permission to deploy to Pages
      id-token: write         # Permission to verify deployment origin
    runs-on: ubuntu-latest
    needs: [jupyter, marimo]  # This job depends on both jupyter and marimo jobs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Publish book
        id: deployment
        uses: tschm/cradle/actions/book@v0.1.72
