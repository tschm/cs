# Workflow for building and deploying the Jupyter Book documentation
# This workflow is triggered on push events and performs the following tasks:
# 1. Builds Marimo notebooks and exports them to HTML
# 2. Builds Jupyter notebooks into a book
# 3. Combines all artifacts and deploys them to GitHub Pages

name: deploy-book

# Trigger the workflow on push events
# This ensures the documentation is automatically updated whenever code changes are pushed
on:
  push:


# This workflow contains multiple jobs that run in parallel and sequentially
jobs:
  # Job to build Marimo interactive notebooks and export them to HTML
  # This converts Python files in the book/marimo directory to interactive web pages
  marimo:
    runs-on: ubuntu-latest
    steps:
      # Set up the Python virtual environment with all required dependencies
      # This uses a reusable action from the cradle repository
      - name: "Build the virtual environment for ${{ github.repository }}"
        uses: tschm/cradle/actions/environment@v0.1.69

      # Find all Experiment*.py files in the book/marimo directory and export them to HTML
      # This creates static HTML versions of the interactive notebooks
      - name: Export notebooks via wasm
        run: |
           # Find all Python files in book/marimo directory
           for notebook in book/marimo/Experiment*.py; do
             # Extract the filename without extension
             # echo "Detected notebook $notebook"
             filename=$(basename "$notebook" .py)
             echo "Detected filename $filename"
             # Create output
             folder=artifacts/notebooks/$filename

             mkdir -p $folder
             echo "Folder $folder"
             # Export as readonly, with code locked
             marimo export html $notebook -o $folder/index.html
             echo "Exported $notebook to $folder"
           done
           ls -all artifacts/notebooks

      # Upload the generated HTML files as a GitHub Actions artifact
      # This makes the files available for the deployment job
      - name: Upload HTML artifacts
        uses: actions/upload-artifact@v4
        with:
          name: notebooks
          path: artifacts/notebooks
          retention-days: 1  # Keep artifacts for 1 day to save storage

  # Job to build the Jupyter Book documentation
  # This converts Jupyter notebooks to a static website with navigation
  jupyter:
    runs-on: "ubuntu-latest"
    steps:
      # Set up the Python virtual environment with all required dependencies
      # This uses a reusable action from the cradle repository
      - name: "Build the virtual environment for ${{ github.repository }}"
        uses: tschm/cradle/actions/environment@v0.1.69

      # Build the Jupyter Book using a reusable action
      # This action handles the book building process including configuration
      - uses: tschm/cradle/actions/jupyter@v0.1.69

  # Job to combine all artifacts and prepare them for deployment
  # This job runs after both marimo and jupyter jobs have completed
  build:
    runs-on: "ubuntu-latest"
    needs: [ jupyter, marimo ]  # This job depends on both jupyter and marimo jobs

    steps:
      # Download all artifacts from previous jobs
      # This collects the outputs from both the marimo and jupyter jobs
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
           path: artifacts

      # List the downloaded artifacts for debugging purposes
      # This helps verify that all expected files were generated
      - name: Inspection
        run: |
          ls -all artifacts
          ls -all artifacts

      # Package all artifacts for GitHub Pages deployment
      # This prepares the combined outputs for deployment
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifacts/  # Path to the directory containing all artifacts

  # Job to deploy the built book to GitHub Pages
  # This job publishes the combined artifacts to the GitHub Pages site
  deploy-book:
    runs-on: ubuntu-latest
    # This job depends on the build job completing successfully
    needs: build
    # Need specific permissions for GitHub Pages deployment
    permissions:
        pages: write      # Permission to deploy to Pages
        id-token: write   # Permission to verify deployment origin

    # Configure the deployment environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # URL will be available after deployment

    steps:
      # Deploy the artifact to GitHub Pages using GitHub's official action
      # This publishes the website to the repository's GitHub Pages URL
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
